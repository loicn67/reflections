How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It shows only the lines that have been amended.
    Saves time by not having to go through the entire file and shows what has been deleted and added

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy to spot typos and/or bug
    Increased productivity
    Easy to go back to previous versions in which code was functioning differently.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   Pro : each commit makes sense
   Pro : No undesirable commits
   Cons : May forget to do so easily

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    As Git was created with coding in mine
    In coding we will likely be working on different documents as one
    a change on a document may affect and induce a change in an another document
    makes sense to commit these changes together

How can you use the commands git log and git diff to view the history of files?

    First i need to use git log to see all amendments
    then I need to use git diff to compare two commits
    by compary two commits I can easily see all amendments made

How might using version control make you more confident to make changes that
could break something?

    I can easily go back to previous versions of the code when a bug was not present
    without affecting the most recent version. Can take on bigger changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Start working on projects
    Try new code and new implementation on project without fear of breaking the code

Commands:

q |    exit git log!
git log  |    List the commits and show which files have changed
git log --stat  |    Show addition information about the commits
git diff id1 id2  |    Compare two commits
git clone  |    Create a local copy/clone from the repository
git config --global color.ui auto |    get colored diff output
git checkout  |    Shows a previous version of the file. This is not a checkout to edit like in SVN or TFS!

    