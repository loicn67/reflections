When would you want to use a remote repository rather than keeping all your work
local?

    When crowdsourcing, working as a team on a project. Each person working on the project 
    would have access to the most updated file.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Pulling manually permits me to decide when to update the local version. Pulling automatically would add changes to my local repositeries which is not adequate to what I am 
    currently working on. By chosing when to pull I can decide when it is time to update my local repositeries following certain logical changes

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork is like a clone but on GitHub, it copies a repository into our own account. It permits to give credit to the author and allow us to work on his files without affecting the original.
    Clones permits to save a copy of a repository locally. By cloning a repository it is automatically adeed as a remote "origin"
    Branches happens in a single repository. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    I can work on the project without internet access and based on the changes that have been made to the remote. I can also fix any conflict locally and adapt my code based on those changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    By using a cloud storage (i.e Dropbox or so) and by saving copies of a file following changes. I woul then email collaborators to suggest the changes. It would prove hard to keep track of the different changes and of the master version.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
